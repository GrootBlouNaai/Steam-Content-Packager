<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="SteamContentPackager.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework" xmlns:local="clr-namespace:SteamContentPackager" xmlns:steamContentPackager="clr-namespace:SteamContentPackager" xmlns:Controls="clr-namespace:SteamContentPackager.UI.Controls" ResizeMode="CanResizeWithGrip" MinWidth="550" MinHeight="600" WindowStartupLocation="CenterScreen" WindowStyle="None" AllowsTransparency="True" Background="#00FFFFFF" DataContext="{Binding RelativeSource={RelativeSource Self}}" Width="{Binding WindowWidth, Mode=TwoWay}" Height="{Binding WindowHeight, Mode=TwoWay}">
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background2" Color="#222222" />
      <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border2" Color="#222222" />
      <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background2" Color="#222222" />
      <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border2" Color="#222222" />
      <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background2" Color="#222222" />
      <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border2" Color="#222222" />
      <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background2" Color="#222222" />
      <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border2" Color="#222222" />
      <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border2" Color="#444444" />
      <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background2" Color="#444444" />
      <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border2" Color="#444444" />
      <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="BorderBrush" Value="#00FFFFFF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
              <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="TextElement.Foreground" />
                </Trigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="ListBoxItem.IsSelected" Value="False" />
                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                    <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background2}" />
                  <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border2}" />
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="ListBoxItem.IsSelected" Value="True" />
                    <Condition Property="UIElement.IsMouseOver" Value="False" />
                    <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background2}" />
                  <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border2}" />
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="ListBoxItem.IsSelected" Value="True" />
                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background2}" />
                  <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border2}" />
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="ListBoxItem.IsSelected" Value="True" />
                    <Condition Property="UIElement.IsMouseOver" Value="False" />
                    <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background2}" />
                  <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border2}" />
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="ListBoxItem.IsSelected" Value="False" />
                    <Condition Property="UIElement.IsMouseOver" Value="False" />
                    <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border2}" />
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="ListBoxItem.IsSelected" Value="False" />
                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                    <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background2}" />
                  <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border2}" />
                </MultiTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ListItemButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border Name="border" CornerRadius="4" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True" Width="16" Height="16">
                <TextBlock VerticalAlignment="Center" Padding="2,0" HorizontalAlignment="Left" Height="18" Text="+" />
              </Border>
              <ControlTemplate.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation Duration="00:00:0.2" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" From="{StaticResource ButtonMouseOverBackground}" To="{StaticResource ButtonBackground}" />
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger>
                <Trigger Property="Button.IsDefaulted" Value="True">
                  <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Border.BorderBrush" />
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Button.MouseOver.Background}" />
                  <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                  <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Button.Pressed.Background}" />
                  <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Button.Disabled.Background}" />
                  <Setter TargetName="border" Property="Border.BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <FrameworkElement.Style>
    <Style TargetType="{x:Type Window}">
      <Style.Triggers>
        <Trigger Property="IsEnabled" Value="False">
          <Setter Property="UIElement.Effect">
            <Setter.Value>
              <BlurEffect x:Name="BlurEffect" Radius="2" KernelType="Gaussian" RenderingBias="Quality" />
            </Setter.Value>
          </Setter>
        </Trigger>
      </Style.Triggers>
    </Style>
  </FrameworkElement.Style>
  <Border Margin="0,0,5,5" BorderThickness="2" BorderBrush="{DynamicResource TextBox.Static.Border}" CornerRadius="4">
    <UIElement.Effect>
      <DropShadowEffect Opacity="0.4" ShadowDepth="3" />
    </UIElement.Effect>
    <Border Background="{DynamicResource Window.Background}" CornerRadius="4">
      <Grid Margin="5">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Name="SettingsRow">
            <FrameworkContentElement.Style>
              <Style TargetType="{x:Type RowDefinition}">
                <Setter Property="Height" Value="Auto" />
                <Style.Triggers>
                  <DataTrigger Value="False" Binding="{Binding ShowSettings}">
                    <Setter Property="Height" Value="0" />
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkContentElement.Style>
          </RowDefinition>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="35" />
            <ColumnDefinition Width="35" />
          </Grid.ColumnDefinitions>
          <Label Margin="70,0,0,0" Padding="0,0,0,7" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalAlignment="Top" FontSize="20" Foreground="#FFC0C0C0" Content="Steam Content Packager" MouseDown="TitleMouseDown">
            <UIElement.Effect>
              <DropShadowEffect />
            </UIElement.Effect>
          </Label>
          <Button Name="MinimizeButton" Grid.Column="1" Margin="0,5" BorderThickness="0" Height="25" Width="25" HorizontalAlignment="Center" VerticalAlignment="Top" Style="{DynamicResource WindowButtonStyle}" Click="MinimizeButton_OnClick">
            <Path Margin="-7,-5" Width="25" Height="25" StrokeThickness="2" Data="M5,20 L20,20" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" />
          </Button>
          <Button Name="CloseButton" Grid.Column="2" Margin="0,5" BorderThickness="0" Height="25" Width="25" VerticalAlignment="Top" Style="{DynamicResource WindowButtonStyle}" Foreground="#FFACACAC" Click="CloseButton_OnClick">
            <Path Margin="-5,-3" Width="25" Height="25" StrokeThickness="2" Data="M5,5 L20,20 M5,20 L20,5" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" />
          </Button>
        </Grid>
        <Grid Row="1" HorizontalAlignment="Stretch">
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="80" />
          </Grid.ColumnDefinitions>
          <StackPanel Grid.ColumnSpan="2">
            <TextBlock Margin="5,10,0,0" Foreground="{DynamicResource Button.Static.Foreground}">
              <Run Text="Application" />
            </TextBlock>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="85" />
              </Grid.ColumnDefinitions>
              <ComboBox Name="AppList" Margin="5" ItemsSource="{Binding InstalledApps}">
                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Button Style="{StaticResource ListItemButtonStyle}" Width="16" Height="16" Click="QuickAddClicked" />
                      <Label Foreground="#FFC0C0C0" Grid.Column="1" Content="{Binding Name}" />
                    </Grid>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ComboBox>
              <Button Margin="5" Grid.Column="1" Content="Refresh" Click="RefreshAppListClick" />
            </Grid>
          </StackPanel>
        </Grid>
        <CheckBox Margin="5" Grid.Row="2" Foreground="{DynamicResource Button.Static.Foreground}" Content="Show Settings" IsChecked="{Binding ShowSettings, Mode=TwoWay}" />
        <GroupBox Margin="5" Grid.Row="3" Header="Settings" Foreground="{DynamicResource Button.Static.Foreground}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition />
              <RowDefinition />
              <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.ColumnSpan="3">
              <TextBlock Foreground="{DynamicResource Button.Static.Foreground}">
                <Run Text="Output Directory" />
              </TextBlock>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="85" />
                </Grid.ColumnDefinitions>
                <TextBox Name="OutputDir_TB" Margin="5" Height="27" Text="{Binding OutputDirectory, Mode=TwoWay}" />
                <Button Margin="5" Grid.Column="1" Content="Browse" Click="Button_Click" />
              </Grid>
            </StackPanel>
            <CheckBox Grid.Row="1" Grid.Column="0" Foreground="#FFC0C0C0" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Show Log" IsChecked="{Binding Log.ShowWindow, Mode=TwoWay}" />
            <CheckBox Grid.Row="1" Grid.Column="1" Foreground="#FFC0C0C0" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Download Missing Content" IsChecked="{Binding DownloadContent, Mode=TwoWay}" />
            <CheckBox Grid.Row="2" Grid.Column="0" Foreground="#FFC0C0C0" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Write Depot Info" IsChecked="{Binding WriteDepotInfo, Mode=TwoWay}" />
            <CheckBox Grid.Row="2" Grid.Column="1" Foreground="#FFC0C0C0" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Show Notifications" IsChecked="{Binding ShowNotifications, Mode=TwoWay}" />
            <CheckBox Grid.Row="3" Grid.Column="0" Foreground="#FFC0C0C0" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Generate BBCode" IsChecked="{Binding GenerateBBCode, Mode=TwoWay}" />
            <CheckBox Grid.Row="3" Grid.Column="1" Foreground="#FFC0C0C0" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" Content="Slim Tasks" IsChecked="{Binding SlimTasks, Mode=TwoWay}" />
            <DockPanel Grid.Row="1" Grid.Column="2">
              <Label Width="100" Foreground="#FFC0C0C0" HorizontalAlignment="Center" Margin="5,0">Uploader Name:</Label>
              <TextBox Foreground="#FFC0C0C0" Margin="5" Height="18" HorizontalAlignment="Stretch" Text="{Binding UploaderName, Mode=TwoWay}" />
            </DockPanel>
            <DockPanel Grid.Row="2" Grid.Column="2">
              <Label Width="100" Foreground="#FFC0C0C0" HorizontalAlignment="Center" Margin="5,0">Hoster Name:</Label>
              <TextBox Foreground="#FFC0C0C0" Margin="5" Height="18" HorizontalAlignment="Stretch" Text="{Binding HosterName, Mode=TwoWay}" />
            </DockPanel>
            <DockPanel Grid.Row="3" Grid.Column="2">
              <Label Width="100" Foreground="#FFC0C0C0" HorizontalAlignment="Center" Margin="5,0">Last Owner:</Label>
              <TextBox Foreground="#FFC0C0C0" Margin="5" Height="18" HorizontalAlignment="Stretch" Text="{Binding LastOwner, Mode=TwoWay}" />
            </DockPanel>
          </Grid>
        </GroupBox>
        <Button Grid.Row="4" Content="Add To Queue" Margin="5" HorizontalAlignment="Center" Click="AddClicked" />
        <GroupBox Margin="5,5" Grid.Row="5" Header="Tasks" Foreground="#FFC0C0C0">
          <Controls:TaskList x:Name="TaskList" Margin="5" />
        </GroupBox>
        <Button Name="LoginButton" Grid.Row="6" Content="Login" Margin="5" HorizontalAlignment="Left" Click="LoginClicked" />
      </Grid>
    </Border>
  </Border>
</Window>