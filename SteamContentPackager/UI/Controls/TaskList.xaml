<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="SteamContentPackager.UI.Controls.TaskList" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:SteamContentPackager.UI.Controls" xmlns:dd="urn:gong-wpf-dragdrop" xmlns:utils="clr-namespace:SteamContentPackager.Utils" xmlns:converters="clr-namespace:SteamContentPackager.Utils.Converters" DataContext="{Binding RelativeSource={RelativeSource Self}}">
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <utils:StateToColourConverter x:Key="StateToColourConverter" />
      <Style x:Key="ItemButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,3,5,3" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate>
              <Border Name="border" CornerRadius="4" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="0" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="True">
                <ContentPresenter Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="LabelStyle1" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#FF808080" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Label}">
              <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="True">
                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                  <Setter Property="Foreground" Value="#FFFFFFFF" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <Grid>
    <FrameworkElement.Resources>
      <ResourceDictionary>
        <converters:UpdateThresholdConverter x:Key="thresholdConv" UpdateThreshold="5" />
        <converters:TaskStateToVisibilityConverter x:Key="TaskStateToVisibilityConverter" />
        <converters:TaskStateToVisibilityConverter2 x:Key="TaskStateToVisibilityConverter2" />
      </ResourceDictionary>
    </FrameworkElement.Resources>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition />
    </Grid.RowDefinitions>
    <Grid HorizontalAlignment="Right" Row="0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Button Name="QueueToggle" UseLayoutRounding="True" Grid.Column="0" Margin="5" HorizontalAlignment="Right" Content="START QUEUE" Click="QueueStateToggleClicked" />
      <Button Name="QueueToggle2" UseLayoutRounding="True" Grid.Column="1" Margin="5,5,0,5" HorizontalAlignment="Right" Content="CLEAR COMPLETED" Click="ClearCompletedClicked" />
    </Grid>
    <ListBox Name="ListBox" Grid.Row="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" DragDrop.IsDragSource="True" DragDrop.IsDropTarget="True" Margin="0,0,0,0" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" p10:DragDrop.DropHandler="{Binding}" ItemsSource="{Binding Tasks}" xmlns:p10="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.WPF.DragDrop">
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <Border Margin="0,3,0,3" Background="{DynamicResource Button.Static.Border}" CornerRadius="4">
            <Border Margin="2" Background="{DynamicResource Button.Static.Background}" CornerRadius="4">
              <Grid Height="Auto">
                <Grid.RowDefinitions>
                  <RowDefinition Name="TitleRow" Height="27" />
                  <RowDefinition Name="StatusRow" Height="20" />
                  <RowDefinition Name="ProgressBarRow" Height="35" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Name="ImageColumn" Width="146" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="45" />
                </Grid.ColumnDefinitions>
                <Border Name="ImageBorder" Margin="10,10" Grid.Column="0" Grid.RowSpan="3" Background="#ACACAC">
                  <Image Name="Image" Margin="2" RenderOptions.BitmapScalingMode="HighQuality" Source="{Binding SteamApp.Image}" />
                  <UIElement.Effect>
                    <DropShadowEffect ShadowDepth="8" />
                  </UIElement.Effect>
                </Border>
                <Grid Column="1" Row="0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <TextBlock Name="TitleText" FontWeight="SemiBold" FontSize="16" Margin="5,5,0,0" Foreground="#FFC0C0C0" Text="{Binding SteamApp.Name}" />
                  <TextBlock Name="SizeText" VerticalAlignment="Center" Grid.Column="1" FontSize="11" Margin="5,7,0,0" Foreground="#FFC0C0C0" Text="{Binding SteamApp.SizeOnDisk}" />
                </Grid>
                <TextBlock Name="StatusText" FontSize="12" Margin="5,5,0,0" Grid.Column="1" Grid.Row="1" Visibility="{Binding State, Converter={StaticResource TaskStateToVisibilityConverter2}}" Foreground="{Binding State, Converter={StaticResource StateToColourConverter}}" Text="{Binding Status}" />
                <AdornerDecorator Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
                  <ProgressBar Name="ProgressBar" Margin="5,5,10,10" IsHitTestVisible="False" VerticalAlignment="Stretch" Style="{StaticResource MyProgressBarStyle}" IsTabStop="False" Visibility="{Binding State, Converter={StaticResource TaskStateToVisibilityConverter}}" Maximum="{Binding ProgressMax, FallbackValue=100}" Value="{Binding ProgressValue, FallbackValue=0, Converter={StaticResource thresholdConv}}" Tag="{Binding Status}">
                    <UIElement.Effect>
                      <DropShadowEffect ShadowDepth="4" />
                    </UIElement.Effect>
                  </ProgressBar>
                </AdornerDecorator>
                <Label Padding="0" HorizontalAlignment="Right" Width="25" Height="25" Grid.Column="2" Grid.Row="0" FontSize="18" FontWeight="Bold" Content="X" Style="{StaticResource LabelStyle1}" MouseUp="TaskCancelButtonClicked" />
              </Grid>
            </Border>
          </Border>
          <DataTemplate.Triggers>
            <DataTrigger Value="true" Binding="{Binding Path=DataContext.SlimTasks, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:TaskList}}}">
              <Setter TargetName="ImageColumn" Property="ColumnDefinition.Width" Value="0" />
              <Setter TargetName="TitleRow" Property="RowDefinition.Height" Value="20" />
              <Setter TargetName="StatusRow" Property="RowDefinition.Height" Value="0" />
              <Setter TargetName="StatusText" Property="Grid.Row" Value="2" />
              <Setter TargetName="ProgressBarRow" Property="RowDefinition.Height" Value="25" />
              <Setter TargetName="ProgressBar" Property="FrameworkElement.Margin" Value="5,4,10,5" />
              <Setter TargetName="TitleText" Property="TextBlock.FontSize" Value="14" />
              <Setter TargetName="TitleText" Property="FrameworkElement.Margin" Value="5,1" />
              <Setter TargetName="SizeText" Property="FrameworkElement.Margin" Value="0,4" />
              <Setter TargetName="SizeText" Property="FrameworkElement.VerticalAlignment" Value="Top" />
            </DataTrigger>
          </DataTemplate.Triggers>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ListBox>
  </Grid>
</UserControl>